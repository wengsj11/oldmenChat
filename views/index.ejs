<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/reset.css' />
  </head>
  <body>
    <div class="container clearfix">
      <div class="msg">
        <div class="msg__bd clearfix">
          <p class="msg-title">老年人聊天室<span><%= username %> | <a href="/logout" id="logout">退出</a></span></p>
          <div class="msg-panel">
          </div>
        </div>
        <div class="msg__ft">
          <ul class="msg-input__hd"></ul>
          <div class="msg-input__bd clearfix">
            <div class="msg-input" contenteditable="true"></div>
            <button class="msg-btn">发送</button>
          </div>
        </div>
      </div>
      <div class="msg-users">
        <p class="msg-title">聊天成员<span id="userNum">0人</span></p>
      </div>
    </div>
    <script type="text/javascript" src="/javascripts/jquery.slim.min.js"></script>
    <script type="text/javascript" src="/javascripts/socket.io.js"></script>
    <script type="text/javascript">
      // var socket = io();
      var socket = io();
      var username = "<%= username %>",
          inputText = $('.msg-input'),
          msgPanel = $('.msg-panel'),
          msgUsers = $('.msg-users');
      var onPanelBottom = true; //是否在消息窗口底部

      //触发服务器登录事件
      socket.emit("login",username);
      //监听登录获取的数据（当前的用户数组）
      socket.on('userList',function (data) {
        // console.log(data);
        for (var i = 0; i < data.userList.length - 1; i++) {
          // 循环遍历 第0项到倒数第二项，最后一项是自己，登录的时候已经添加过
          var user = data.userList[i];
          msgUsers.append(
            '<div class="msg-users__item" id="u'+ i +'"><img src="/images/avatar.jpg" alt="avatar"><span>'
              + user.username +'</span></div>'
            );
        }
      })
      //退出断开连接事件
      $('#logout').click(function (e) {
        socket.disconnect();//触发断开连接
      })
      //发送消息事件
      $('.msg-btn').click(function (e) {
        var val = inputText.html()
        //输入内容为空不发送
        if(!val){
          inputText.focus();
          return;
        }
        socket.emit("postMsg",{username:username, msg:val});
        //清空input
        inputText.html('');
      })
      //监听服务器其他用户发言
      socket.on('broadcastMessage', function(data){
        console.log(data);
        // 渲染消息
        renderMsg(data); 
      })
      //监听其他用户登录
      socket.on('userEnter',function (data) {
        // console.log(data,'login');
        renderSysMsg(data)
        msgUsers.append(
            '<div class="msg-users__item" id="u'+  (data.num-1) +'"><img src="/images/avatar.jpg" alt="avatar"><span>'
              + data.username +'</span></div>'
            );
      })
      //监听其他用户登出
      socket.on('userLeave',function (data) {
        // console.log(data,'logout');
        renderSysMsg(data,'logout') //默认不传logout是渲染登录
        $('#u'+data.num).remove();
      })
      //监听消息窗口滚动事件
      // TODO 加一下函数防抖
      msgPanel.scroll(function () {
        var scrollHeight = msgPanel.prop("scrollHeight"),
        outerHeight = msgPanel.outerHeight(),
        scrollTop = Math.floor(msgPanel.prop("scrollTop"));
        if(scrollTop>=scrollHeight-outerHeight){
          onPanelBottom = true;
        }else {
          onPanelBottom = false;
        }
      })
      //渲染消息的函数
      function renderMsg(data){
        var html = '';
        if(data.username === username){
          html = '<div class="a-msg a-msg--my"><img src="/images/avatar.jpg" alt="头像"><div class="a-msg-content"><span>'+data.msg+'</span></div></div>'
        }
        else {
          html = '<div class="a-msg"><img src="/images/avatar.jpg" alt="头像"><div class="a-msg-content"><h5>'+data.username+'</h5><span>'+data.msg+'</span></div></div>'
        }
        msgPanel.append(html);
        //出现滚动条且在消息窗口顶部
        if(onPanelBottom){
          msgPanel.scrollTop(msgPanel.prop("scrollHeight"))
        }
      }
      //渲染系统消息的函数
      function renderSysMsg(data, event) {
        var html = '';
        var event = event || 'login';
        var userNum = $('#userNum');
        if(event === 'login'){
          html = '<p class="a-msg--sys"><span>系统消息：'+data.username+'进入了群聊</span></p>' 
        } else{
          html = '<p class="a-msg--sys"><span>系统消息：'+data.username+'离开了群聊</span></p>' 
        }
        userNum.text(data.num+'人');
        msgPanel.append(html);
        //出现滚动条且在消息窗口顶部
        if(onPanelBottom){
          msgPanel.scrollTop(msgPanel.prop("scrollHeight"))
        }
      }
      $(document).ready(function(){
        //聚焦到输入框上
        inputText.focus();
      })
    </script>
  </body>
</html>
